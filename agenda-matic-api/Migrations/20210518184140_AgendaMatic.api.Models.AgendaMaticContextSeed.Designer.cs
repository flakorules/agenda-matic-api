// <auto-generated />
using System;
using AgendaMatic.api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AgendaMatic.api.Migrations
{
    [DbContext(typeof(AgendaMaticContext))]
    [Migration("20210518184140_AgendaMatic.api.Models.AgendaMaticContextSeed")]
    partial class AgendaMaticapiModelsAgendaMaticContextSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AgendaMatic.api.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AppointmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointmentId = 1,
                            AppointmentDate = new DateTime(2021, 5, 24, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            AppointmentId = 2,
                            AppointmentDate = new DateTime(2021, 5, 24, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AppointmentId = 3,
                            AppointmentDate = new DateTime(2021, 5, 24, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            AppointmentId = 4,
                            AppointmentDate = new DateTime(2021, 5, 24, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AppointmentId = 5,
                            AppointmentDate = new DateTime(2021, 5, 25, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            AppointmentId = 6,
                            AppointmentDate = new DateTime(2021, 5, 25, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AppointmentId = 7,
                            AppointmentDate = new DateTime(2021, 5, 25, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            AppointmentId = 8,
                            AppointmentDate = new DateTime(2021, 5, 25, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AppointmentId = 9,
                            AppointmentDate = new DateTime(2021, 5, 26, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AppointmentId = 10,
                            AppointmentDate = new DateTime(2021, 5, 26, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AppointmentId = 11,
                            AppointmentDate = new DateTime(2021, 5, 26, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            AppointmentId = 12,
                            AppointmentDate = new DateTime(2021, 5, 26, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AppointmentId = 13,
                            AppointmentDate = new DateTime(2021, 5, 27, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AppointmentId = 14,
                            AppointmentDate = new DateTime(2021, 5, 27, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AppointmentId = 15,
                            AppointmentDate = new DateTime(2021, 5, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            AppointmentId = 16,
                            AppointmentDate = new DateTime(2021, 5, 27, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AppointmentId = 17,
                            AppointmentDate = new DateTime(2021, 5, 28, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AppointmentId = 18,
                            AppointmentDate = new DateTime(2021, 5, 28, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AppointmentId = 19,
                            AppointmentDate = new DateTime(2021, 5, 28, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AppointmentId = 20,
                            AppointmentDate = new DateTime(2021, 5, 28, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AgendaMatic.api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "flakorules@gmail.com",
                            Password = "123456"
                        },
                        new
                        {
                            Id = 2,
                            Email = "gbustamante@chilesystems.com",
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("AgendaMatic.api.Models.Appointment", b =>
                {
                    b.HasOne("AgendaMatic.api.Models.User", null)
                        .WithMany("Appointments")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AgendaMatic.api.Models.User", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
